trigger:
  branches:
    include:
    - main
    - develop
    - feature/*
    - hotfix/*
  paths:
    include:
    - projects/simpi-frontend-web/**
    - projects/simpi-frontend-mobile/**
    - projects/simpi-frontend-common/**
    - package.json
    - angular.json
    - azure-pipelines-test.yml

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '18.19.1'
  NPM_VERSION: '10.2.4'

stages:
- stage: Test
  displayName: 'Test Build Process'
  jobs:
  - job: BuildTest
    displayName: 'Build and Test'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: $(NODE_VERSION)
        checkLatest: true

    - script: |
        echo "Node version:"
        node --version
        echo "npm version:"
        npm --version
      displayName: 'Display Node.js and npm versions'

    - script: |
        npm install --legacy-peer-deps
      displayName: 'Install dependencies'
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - script: |
        npm run lint
      displayName: 'Run linting'
      continueOnError: true

    - script: |
        npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
      displayName: 'Run unit tests'
      continueOnError: true

    - script: |
        npm run buildwebdev
      displayName: 'Build web project (development)'
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - script: |
        npm run buildweb
      displayName: 'Build web project (production)'
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - script: |
        npm run buildandroid
      displayName: 'Build Android project'
      continueOnError: true
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - script: |
        npm run buildios
      displayName: 'Build iOS project'
      continueOnError: true
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results.xml'
        mergeTestResults: true
        testRunTitle: 'Simpi Frontend Tests'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/coverage/cobertura-coverage.xml'
        reportDirectory: '**/coverage'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish web build artifacts'
      inputs:
        pathToPublish: 'dist/simpi-frontend-web'
        artifactName: 'web-build'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish mobile build artifacts'
      inputs:
        pathToPublish: 'dist/simpi-frontend-mobile'
        artifactName: 'mobile-build'
        publishLocation: 'Container'
      condition: succeededOrFailed()

- stage: Security
  displayName: 'Security Scan'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: SecurityCheck
    displayName: 'Security Analysis'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: $(NODE_VERSION)

    - script: |
        npm install --legacy-peer-deps
      displayName: 'Install dependencies'

    - script: |
        npm audit --audit-level=moderate
      displayName: 'Run security audit'
      continueOnError: true

    - script: |
        npm outdated
      displayName: 'Check for outdated packages'
      continueOnError: true

- stage: Performance
  displayName: 'Performance Test'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: PerformanceCheck
    displayName: 'Bundle Analysis'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: $(NODE_VERSION)

    - script: |
        npm install --legacy-peer-deps
      displayName: 'Install dependencies'

    - script: |
        npm run buildweb
      displayName: 'Build for analysis'
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - script: |
        echo "Bundle size analysis:"
        du -sh dist/simpi-frontend-web/*
        echo "Main bundle size:"
        ls -lh dist/simpi-frontend-web/main*.js
        echo "Vendor bundle size:"
        ls -lh dist/simpi-frontend-web/vendor*.js
      displayName: 'Analyze bundle sizes' 